<exp name="ExpTester" dir="/tmp/exp1" width="2" height="1">
   <listeners>
      <expListener class="org.ebsdimage.core.exp.MapsSaverListener"/>
   </listeners>
   <metadata>
      <acquisitionConfig>
         <microscope name="Unnamed">
            <camera>
               <n>1.0;0.0;0.0</n>
               <x>0.0;-1.0;0.0</x>
               <width>0.04</width>
               <height>0.03</height>
            </camera>
            <tiltAxis>0.0;1.0;0.0</tiltAxis>
         </microscope>
         <tiltAngle>1.2217304763960306</tiltAngle>
         <workingDistance>0.015</workingDistance>
         <beamEnergy>20000.0</beamEnergy>
         <magnification>100.0</magnification>
         <sampleRotation>1.0;0.0;0.0;0.0</sampleRotation>
         <patternCenterX>0.0</patternCenterX>
         <patternCenterY>0.0</patternCenterY>
         <cameraDistance>0.0</cameraDistance>
      </acquisitionConfig>
   </metadata>
   <phases class="java.util.HashMap">
      <entry>
         <integer>0</integer>
         <crystal name="Unindexed">
            <unitCell a="1.0" b="1.0" c="1.0" alpha="1.0" beta="1.0" gamma="1.0"/>
            <atoms/>
            <spaceGroup>1</spaceGroup>
         </crystal>
      </entry>
      <entry>
         <integer>1</integer>
         <crystal name="Silicon">
            <unitCell a="5.43" b="5.43" c="5.43" alpha="1.5707963267948966" beta="1.5707963267948966" gamma="1.5707963267948966"/>
            <atoms>
               <atom atomicNumber="14" occupancy="1.0">
                  <position>0.0;0.0;0.0</position>
               </atom>
               <atom atomicNumber="14" occupancy="1.0">
                  <position>0.0;0.5;0.5</position>
               </atom>
               <atom atomicNumber="14" occupancy="1.0">
                  <position>0.5;0.0;0.5</position>
               </atom>
               <atom atomicNumber="14" occupancy="1.0">
                  <position>0.5;0.5;0.0</position>
               </atom>
            </atoms>
            <spaceGroup>216</spaceGroup>
         </crystal>
      </entry>
   </phases>
   <patternOp class="org.ebsdimage.core.exp.ops.pattern.op.PatternOpMock" startIndex="0" size="2"/>
   <patternPostOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.pattern.post.PatternPostOpsMock"/>
   </patternPostOps>
   <patternResultsOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.pattern.results.PatternResultsOpsMock"/>
   </patternResultsOps>
   <houghPreOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.hough.pre.HoughPreOpsMock"/>
   </houghPreOps>
   <houghOp class="org.ebsdimage.core.exp.ops.hough.op.HoughOpMock"/>
   <houghPostOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.hough.post.HoughPostOpsMock"/>
   </houghPostOps>
   <houghResultsOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.hough.results.HoughResultsOpsMock"/>
   </houghResultsOps>
   <detectionPreOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.detection.pre.DetectionPreOpsMock"/>
   </detectionPreOps>
   <detectionOp class="org.ebsdimage.core.exp.ops.detection.op.DetectionOpMock"/>
   <detectionPostOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.detection.post.DetectionPostOpsMock"/>
   </detectionPostOps>
   <detectionResultsOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.detection.results.DetectionResultsOpsMock"/>
   </detectionResultsOps>
   <positioningPreOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.positioning.pre.PositioningPreOpsMock"/>
   </positioningPreOps>
   <positioningOp class="org.ebsdimage.core.exp.ops.positioning.op.PositioningOpMock"/>
   <positioningPostOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.positioning.post.PositioningPostOpsMock"/>
   </positioningPostOps>
   <positioningResultsOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.positioning.results.PositioningResultsOpsMock"/>
   </positioningResultsOps>
   <indexingPreOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.indexing.pre.IndexingPreOpsMock"/>
   </indexingPreOps>
   <indexingOp class="org.ebsdimage.core.exp.ops.indexing.op.IndexingOpMock"/>
   <indexingPostOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.indexing.post.IndexingPostOpsMock"/>
   </indexingPostOps>
   <indexingResultsOps length="1">
      <expOperation class="org.ebsdimage.core.exp.ops.indexing.results.IndexingResultsOpsMock"/>
   </indexingResultsOps>
</exp>